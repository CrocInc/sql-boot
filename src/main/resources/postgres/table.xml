<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ The MIT License (MIT)
  ~
  ~ Copyright (c) 2016-2017 mgramin
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  ~
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"
        profile="postgres">



    <bean name="table,tbl,t" parent="parentSchemaObjectBean">
        <constructor-arg name="aliases" value="table,tbl,t" />
        <constructor-arg name="child">
            <list>
                <!--<value>#{column}</value>-->
                <!--<value>#{index}</value>-->
                <!--<value>#{pk}</value>
                <value>#{fk}</value>
                <value>#{trigger}</value>
                <value>#{table_grant}</value>
                <value>#{table_comment}</value>-->
            </list>
        </constructor-arg>
        <constructor-arg name="readers">
            <bean parent="baseSqlReader">
                <constructor-arg name="actionGenerator">
                    <bean parent="plainTextTemplateGenerator" c:baseText="${tables}" />
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg name="aggregators">
            <bean class="com.github.mgramin.sqlboot.model.DbResourceTypeAggregator">
                <constructor-arg name="aggregatorName">
                    <ref bean="sqlAggregator"/>
                </constructor-arg>
                <constructor-arg name="commands">
                    <list>
                        <bean parent="plainTextTemplateGenerator" c:baseText='${table.sql.create}'/>
                        <bean parent="plainTextTemplateGenerator" c:baseText='${table.sql.drop}' c:command-ref='DROP'/>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
    </bean>


    <!--<bean name="column,clmn,c" parent="parentSchemaObjectBean">-->
        <!--<property name="aliases" value="column,clmn,c" />-->
        <!--<property name="readers">
            <list>
                <bean name="sqlReader" parent="baseSqlReader">
                    <property name="sql" value="${table.column}" />
                </bean>
            </list>
        </property>-->
        <!--<property name="commands">
            <list>
                <bean id="addColumn" parent="plainTextTemplateGenerator">
                    <property name="template" >
                        <value>
                            alter table !{schema}.!{table} add (!{column});
                        </value>
                    </property>
                </bean>
                <bean id="dropColumn" parent="plainTextTemplateGenerator">
                    <property name="dbSchemaObjectCommand" ref="DROP" />
                    <property name="template" >
                        <value>alter table !{schema}.!{table} drop column !{column};</value>
                    </property>
                </bean>
            </list>
        </property>-->
    <!--</bean>-->


    <!--<bean name="index,idx,i" parent="parentSchemaObjectBean">
        <property name="name" value="index" />
        <property name="sql" >
            <value>
                select i.schemaname     as "schema"
                     , i.tablename      as "table"
                     , i.indexname      as "index"
                     , i.indexdef       as "@indexdef"
                  from pg_indexes i
                 where lower(i.schemaname) like '!{@schema}'
                   and lower(i.tablename) like '!{@table}'
                   and lower(i.indexname) like '!{@index}'
            </value>
        </property>
        <property name="commands">
            <list>
                <bean name="create" parent="plainTextTemplateGenerator">
                    <property name="filePath" value="!{schema?lower_case}/tables/!{table?lower_case}/indexes/!{index?lower_case}.sql" />
                    <property name="template" >
                        <value>!{@indexdef?lower_case};</value>
                    </property>
                </bean>
                <bean name="dropTable" parent="plainTextTemplateGenerator">
                    <property name="dbSchemaObjectCommand" ref="DROP" />
                    <property name="template" >
                        <value>drop index !{schema}.!{index};</value>
                    </property>
                </bean>
            </list>
        </property>
    </bean>-->

</beans>