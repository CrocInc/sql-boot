<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:c="http://www.springframework.org/schema/c"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!--<import resource="oracle/config.xml" />
    <import resource="cassandra/config.xml" />-->
    <import resource="postgres/config.xml" />
    <import resource="information_schema/config.xml" />



    <!-- Base db object schema type -->
    <bean id="parentSchemaObjectBean" class="com.github.mgramin.sqlboot.model.DBResourceType" abstract="true" />



    <!-- Readers -->
    <bean name="baseSqlReader" abstract="true" class="com.github.mgramin.sqlboot.readers.impl.SqlObjectReader">
        <property name="sqlHelper" ref="sqlHelper"/>
        <property name="templateEngine" ref="templateEngine"/>
    </bean>


    <!-- Generators -->
    <bean id="parentSQLGeneratorBean" abstract="true" class = "com.github.mgramin.sqlboot.actions.generator.wrappers.SQLGenerator">
        <property name="sqlHelper" ref="sqlHelper"/>
        <property name="templateEngine" ref="templateEngine" />
        <property name="dbSchemaObjectCommand" ref="CREATE" />
    </bean>

    <bean id="templateGeneratorBean" abstract="true" scope="prototype"
      class="com.github.mgramin.sqlboot.actions.generator.wrappers.TemplateGenerator"
      c:templateEngine-ref='templateEngine' c:command-ref='CREATE' />

    <bean id="templateMarkupGeneratorBean" abstract="true" scope="prototype"
      class="com.github.mgramin.sqlboot.actions.generator.wrappers.TemplateGenerator"
      c:templateEngine-ref='markupTemplateEngine' c:command-ref='CREATE' />

    <bean id="plainTextGenerator" abstract="true" scope="prototype"
          class="com.github.mgramin.sqlboot.actions.generator.impl.PlainTextGenerator"
          c:command-ref='CREATE'/>

    <bean id="templateGeneratorWrapper" abstract="true" scope="prototype"
          class="com.github.mgramin.sqlboot.actions.generator.wrappers.TemplateGeneratorWrapper"
          c:templateEngine-ref="templateEngine"/>



    <!-- Aggregators -->
    <bean name="sqlAggregator" class="com.github.mgramin.sqlboot.script.aggregators.impl.TextAggregator">
        <constructor-arg name="name" value="sql"/>
        <constructor-arg name="isDefault" value="true" />
        <constructor-arg name="httpHeaders">
            <map>
                <entry key="Content-Type" value="text/plain"/>
                <entry key="Content-Disposition" value="inline"/>
            </map>
        </constructor-arg>
    </bean>

    <bean name="htmlAggregator" class="com.github.mgramin.sqlboot.script.aggregators.impl.TextAggregator">
        <constructor-arg name="name" value="html"/>
        <constructor-arg name="httpHeaders">
            <map>
                <entry key="Content-Type" value="text/html"/>
                <entry key="Content-Disposition" value="inline"/>
            </map>
        </constructor-arg>
        <constructor-arg name="templateEngine" ref="templateEngine" />
        <constructor-arg name="template" value="${htmlAggregator}" />
    </bean>

    <bean name="migrationAggregator" class="com.github.mgramin.sqlboot.script.aggregators.impl.TextAggregator">
        <constructor-arg name="name" value="migration"/>
        <constructor-arg name="httpHeaders">
            <map>
                <entry key="Content-Type" value="application/xml"/>
                <entry key="Content-Disposition" value="inline"/>
            </map>
        </constructor-arg>
        <constructor-arg name="templateEngine" ref="templateEngine" />
        <constructor-arg name="template" value="${liquibaseChangeLogAggregator}" />
    </bean>

    <bean name="zipAggregator" class="com.github.mgramin.sqlboot.script.aggregators.impl.ZipAggregator">
        <constructor-arg name="name" value="zip"/>
        <constructor-arg name="httpHeaders">
            <map>
                <entry key="Content-Type" value="application/octet-stream"/>
                <entry key="Content-Disposition" value="attachment; filename=result.zip"/>
            </map>
        </constructor-arg>
    </bean>



    <!-- DB commands -->
    <bean name="command" abstract="true" class="com.github.mgramin.sqlboot.model.DBSchemaObjectCommand" />
    <bean name="CREATE" parent="command" >
        <property name="name" value="create" />
        <property name="aliases" value="create,c,+" />
        <property name="isDefault" value="true" />
    </bean>
    <bean name="DROP" parent="command" >
        <property name="name" value="drop" />
        <property name="aliases" value="drop,d,-" />
    </bean>
    <bean name="DROP_IF_EXISTS" parent="command" >
        <property name="name" value="drop_if_exists" />
        <property name="aliases" value="drop_if_exists,dx,_" />
    </bean>
    <bean name="EXISTS" parent="command" >
        <property name="name" value="exists" />
        <property name="aliases" value="exists,e,?" />
    </bean>
    <bean name="REBUILD" parent="command" >
        <property name="name" value="rebuild" />
        <property name="aliases" value="rebuild,r,*" />
    </bean>
    <bean name="GATHER" parent="command" >
        <property name="name" value="gather_stat" />
        <property name="aliases" value="stat,s,#" />
    </bean>
    <bean name="COMPILE" parent="command" >
        <property name="name" value="compile" />
        <property name="aliases" value="comp,cmp,^" />
    </bean>



    <!-- Template engines -->
    <bean id="templateEngine" scope="prototype" class="com.github.mgramin.sqlboot.util.template_engine.impl.GroovyTemplateEngine" />
    <bean id="markupTemplateEngine" scope="prototype" class="com.github.mgramin.sqlboot.util.template_engine.impl.GroovyMarkupTemplateEngine" />

    <!-- DB helpers -->
    <bean id="sqlHelper" class="com.github.mgramin.sqlboot.util.sql.impl.JdbcSqlHelper" autowire="byType" />

    <!-- Connection pool template -->
    <bean id="templateCP" class = "org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close" abstract="true">
        <property name="validationQuery" value="select 1" />
        <property name="initialSize" value="5" />
        <property name="maxActive" value="10" />
        <property name="maxIdle" value="5" />
        <property name="minIdle" value="2" />
    </bean>

    <bean id="dbConnectionsConf" class="com.github.mgramin.sqlboot.util.sql.DbConnectionManager" init-method="init"/>

</beans>