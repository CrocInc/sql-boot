<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!--<import resource="oracle/config.xml" />
    <import resource="cassandra/config.xml" />-->
    <!--<import resource="postgres/config.xml" />-->
    <import resource="information_schema/config.xml" />


    <!-- Template engines -->
    <bean id="templateEngine" class="com.github.mgramin.sqlboot.util.template_engine.impl.GroovyTemplateEngine" />
    <bean id="markupTemplateEngine" class="com.github.mgramin.sqlboot.util.template_engine.impl.GroovyMarkupTemplateEngine" />
    <bean id="fmTemplateEngine" class="com.github.mgramin.sqlboot.util.template_engine.impl.FMTemplateEngine" />

    <bean id="sqlHelper" class="com.github.mgramin.sqlboot.util.sql.impl.JdbcSqlHelper">
        <property name="dataSource" ref = "dataSource" />
    </bean>


    <!-- Generators -->
    <bean id="parentSQLGeneratorBean" class = "com.github.mgramin.sqlboot.actions.generator.impl.SQLGenerator" abstract="true">
        <property name="dataSource" ref="dataSource" />
        <property name="templateEngine" ref="templateEngine" />
    </bean>

    <bean id="parentTemplateGeneratorBean" class="com.github.mgramin.sqlboot.actions.generator.impl.TemplateGenerator" abstract="true">
        <property name="DBSchemaObjectCommand" ref="CREATE" />
        <property name="templateEngine" ref="templateEngine" />
    </bean>

    <!-- DB-object readers -->

    <bean name="baseSqlReader" class="com.github.mgramin.sqlboot.readers.impl.SqlObjectReader" abstract="true">
        <property name="sqlHelper" ref="sqlHelper"/>
        <property name="templateEngine" ref="templateEngine"/>
    </bean>

    <!-- Script aggregators -->
    <bean name="sqlAggregator" class="com.github.mgramin.sqlboot.script.aggregators.impl.TextAggregator">
        <property name="name" value="sql"/>
        <property name="isDefault" value="true" />
        <property name="httpHeaders">
            <map>
                <entry key="Content-Type" value="text/plain"/>
                <entry key="Content-Disposition" value="inline"/>
            </map>
        </property>
    </bean>

    <bean name="htmlAggregator" class="com.github.mgramin.sqlboot.script.aggregators.impl.TextAggregator">
        <property name="name" value="html"/>
        <property name="httpHeaders">
            <map>
                <entry key="Content-Type" value="text/html"/>
                <entry key="Content-Disposition" value="inline"/>
            </map>
        </property>
    </bean>

    <bean name="liquibaseAggregator" class="com.github.mgramin.sqlboot.script.aggregators.impl.TextAggregator">
        <property name="name" value="liquibase"/>
        <property name="httpHeaders">
            <map>
                <entry key="Content-Type" value="application/xml"/>
                <entry key="Content-Disposition" value="inline"/>
            </map>
        </property>
        <property name="templateEngine" ref="templateEngine" />
        <property name="template" value="${templateAggregator}" />
    </bean>

    <bean name="zipAggregator" class="com.github.mgramin.sqlboot.script.aggregators.impl.ZipAggregator">
        <property name="name" value="zip"/>
        <property name="httpHeaders">
            <map>
                <entry key="Content-Type" value="application/octet-stream"/>
                <entry key="Content-Disposition" value="attachment; filename=result.zip"/>
            </map>
        </property>
    </bean>



    <bean id="parentSchemaObjectBean" class="com.github.mgramin.sqlboot.model.DBSchemaObjectType" abstract="true" />



    <!-- TODO Move to single config -->
    <!-- TODO Add "default" flag -->
    <bean name="command" abstract="true" class="com.github.mgramin.sqlboot.model.DBSchemaObjectCommand" />

    <bean name="CREATE" parent="command" >
        <property name="name" value="create" />
        <property name="aliases" value="create;c;+" />
    </bean>

    <bean name="DROP" parent="command" >
        <property name="name" value="drop" />
        <property name="aliases" value="drop;d;-" />
    </bean>

    <bean name="DROP_IF_EXISTS" parent="command" >
        <property name="name" value="drop_if_exists" />
        <property name="aliases" value="drop_if_exists;dx;_" />
    </bean>

    <bean name="EXISTS" parent="command" >
        <property name="name" value="exists" />
        <property name="aliases" value="exists;e;?" />
    </bean>

    <bean name="REBUILD" parent="command" >
        <property name="name" value="rebuild" />
        <property name="aliases" value="rebuild;r;*" />
    </bean>

    <bean name="GATHER" parent="command" >
        <property name="name" value="gather_stat" />
        <property name="aliases" value="stat;s;#" />
    </bean>

    <bean name="COMPILE" parent="command" >
        <property name="name" value="compile" />
        <property name="aliases" value="comp;cmp;^" />
    </bean>

</beans>