<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean name="type,typ,tp" parent="parentSchemaObjectBean">
        <property name="name" value="type" />
        <property name="sql" >
            <value>
                select t.owner as "schema"
                     , t.object_name as "type"
                  from all_objects t
                 where object_type like 'TYPE'
                   and lower(t.owner) like '${@schema}'
                   and lower(t.object_name) like '${@package}'
            </value>
        </property>
        <property name="commands">
            <list>
                <bean id="createType" parent="parentSQLGeneratorBean">
                    <property name="filePath" value="${schema?lower_case}/types/${type?lower_case}/${type?lower_case}.sql" />
                    <property name="sql" >
                        <value>
                            select dbms_metadata.get_ddl('TYPE_SPEC', '${type}', '${schema}')
                              from dual
                        </value>
                    </property>
                </bean>
            </list>
        </property>
        <property name="child">
            <list>
                <value>#{type_body}</value>
            </list>
        </property>
    </bean>


    <bean name="type_body,typb,tb" parent="parentSchemaObjectBean">
        <property name="name" value="type_body" />
        <property name="child"><null /></property>
        <property name="sql" >
            <value>
                select t.owner as "schema"
                     , t.object_name as "type"
                  from all_objects t
                 where object_type like 'TYPE_BODY'
                   and lower(t.owner) like '${@schema}'
                   and lower(t.object_name) like '${@package}'
            </value>
        </property>
        <property name="commands">
            <list>
                <bean id="createTypeBody" parent="parentSQLGeneratorBean">
                    <property name="filePath" value="${schema?lower_case}/types/${type?lower_case}/${type?lower_case}_body.sql" />
                    <property name="sql" >
                        <value>
                            select dbms_metadata.get_ddl('TYPE_BODY', '${type}', '${schema}')
                              from dual
                        </value>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

</beans>