<?xml version="1.0" encoding="UTF-8"?>
<!--~
  ~ The MIT License (MIT)
  ~
  ~ Copyright (c) 2016-2017 Maksim Gramin
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included
  ~ in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="aq" parent="dbResourceType">
        <property name="name" value="aq" />
        <property name="sql" >
            <value>
                select q.owner as "schema"
                     , q.name as "queue"
                     , q.queue_table as "queue_table"
                  from all_queues q
                 where q.queue_type = 'NORMAL_QUEUE'
                   and lower(q.owner) like '${@schema}'
                   and lower(q.name) like '${@queue}'
            </value>
        </property>
        <property name="child">
            <list>
                <value>#{queue}</value>
                <value>#{aq_table}</value>
            </list>
        </property>
    </bean>


    <bean id="queue" parent="aq">
        <property name="name" value="queue" />
        <property name="child"><null /></property>
        <property name="commands">
            <list>
                <bean id="createQueue" parent="parentSQLGeneratorBean">
                    <property name="filePath" value="${schema?lower_case}/AQ/${queue}/queue.sql" />
                    <property name="sql" >
                        <value>
                            select dbms_metadata.get_ddl('AQ_QUEUE', upper('${queue}'), '${schema}') as ddl
                              from dual
                        </value>
                    </property>
                </bean>
                <bean id="dropQueue" parent="plainTextTemplateGenerator">
                    <property name="filePath" value="${schema?lower_case}/AQ/${queue}/drop_queue.sql" />
                    <property name="template">
                        <value>
                            declare
                                po_t dbms_aqadm.aq$_purge_options_t;
                            begin
                                dbms_aqadm.purge_queue_table('${queue_table}', null, po_t);
                                dbms_aqadm.stop_queue(queue_name => '${queue}');
                                dbms_aqadm.drop_queue(queue_name => '${queue}');
                                dbms_aqadm.drop_queue_table(queue_table => '${queue_table}');
                            end;
                        </value>
                    </property>
                </bean>
                <bean id="startQueue" parent="plainTextTemplateGenerator">
                    <property name="template">
                        <value>
                            begin
                                dbms_aqadm.start_queue (queue_name => '${queue}');
                            end;
                        </value>
                    </property>
                </bean>
                <bean id="stopQueue" parent="plainTextTemplateGenerator">
                    <property name="template">
                        <value>
                            begin
                                dbms_aqadm.stop_queue (queue_name => '${queue}');
                            end;
                        </value>
                    </property>
                </bean>
                <bean id="purgeQueueTable" parent="plainTextTemplateGenerator">
                    <property name="template">
                        <value>
                            DECLARE
                                po_t dbms_aqadm.aq$_purge_options_t;
                            BEGIN
                                dbms_aqadm.purge_queue_table('${queue_table}', NULL, po_t);
                            END;
                        </value>
                    </property>
                </bean>
            </list>
        </property>
    </bean>


    <bean id="aq_table" parent="aq">
        <property name="name" value="queue" />
        <property name="child"><null /></property>
        <property name="commands">
            <list>
                <bean id="createAQTable" parent="parentSQLGeneratorBean">
                    <property name="filePath" value="${schema?lower_case}/AQ/${queue}/table.sql" />
                    <property name="sql" >
                        <value>
                            select DBMS_METADATA.GET_DDL('AQ_QUEUE_TABLE', upper('${queue_table}'), '${schema}') as ddl
                              from DUAL
                        </value>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

</beans>